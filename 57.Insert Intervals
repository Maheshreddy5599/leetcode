class Solution {
    public int[][] insert(int[][] intervals, int[] newInterval) {
        int intervals1[][]=new int[intervals.length+1][2];
        for(int i=0;i<intervals.length;i++){
            intervals1[i]=intervals[i];
        }
        intervals1[intervals1.length-1]=newInterval;
        return merge(intervals1);
    }

     public int[][] merge(int[][] intervals) {
        Arrays.sort(intervals,(interval1,interval2)->interval1[0]-interval2[0]);
        Stack<int[]> s=new Stack<>();
        s.push(intervals[0]);
        for(int i=1;i<intervals.length;i++){
            int[] i2=intervals[i];
            int i2initial=i2[0];
            int i2final=i2[1];
          
                int[] i1=s.pop();
                int i1initial=i1[0];
                int i1final=i1[1];
            
            if(i1final>=i2initial){
                int endMax=Math.max(i2final,i1final);
                int temp[]=new int[]{i1initial,endMax};
                s.push(temp);
            }else{
                s.push(i1);
                s.push(i2);
            }
        }

        int ans[][] =new int[s.size()][2];
        for(int i=s.size()-1;i>=0;i--){
            ans[i]=s.pop();
        }
        return ans;

    }
}
